==+== CS345 Paper Review Form
==-== DO NOT CHANGE LINES THAT START WITH "==+==" UNLESS DIRECTED!
==-== For further guidance, or to upload this file when you are done, go to:
==-== https://hotcrp.kaust.edu.sa/cs345/offline

==+== =====================================================================
==+== Begin Review #27.
==+== Reviewer: Juyi Lin <LINJ>

==+== Paper #27
==-== Title: Homa: A Receiver-Driven Low-Latency Transport Protocol Using
==-==        Network Priorities

==+== Review Readiness
==-== Enter "Ready" if the review is ready for others to see:

Ready

==+== A. Overall merit
==-== Choices:
==-==    1. Reject
==-==    2. Weak reject
==-==    3. Weak accept
==-==    4. Accept
==-==    5. Strong accept
==-== Enter the number of your choice:

3

==+== B. Paper summary


Existing transport protocols are ill-suited to a high volume of very short messages. Homa is a new transport protocol which provides low latency for this condition. It also supports large messages and high network utilization. Homa uses in-network priority queues to ensure low latency for short messages; priority allocation is managed dynamically by each receiver and integrated with a receiver-driven flow control mechanism. Homa also uses controlled overcommitment of receiver downlinks to ensure efficient bandwidth utilization at high loads. 


==+== C. Strengths
==-==    What are the paper’s strengths? Just a couple sentences, please.

1. Homa uses controlled over-commitment to sustain higher network loads.
2. Homa aggressively uses the priority queues provided by modern network switches.


==+== D. Weaknesses
==-==    What are the paper’s weaknesses? Just a couple sentences,
==-==    please.

1. Homa requires higher-level software to either tolerate redundant executions of RPCs or filter them out.
2. Actually, it has too many assumptions. Homa discussed them thoroughly in section 6. It is a specific protocol for a specific application in a specific environment. It seriously lacks generality. 


==+== E. Detailed comments

Strengths
1. Homa delivers 99th percentile round-trip times less than 15 μs for short messages on a 10 Gbps network running at 80% load. These latencies are almost 100x lower than the best published measurements of an implementation. 
2. In simulations, Homa’s latency is roughly equal to pFabric and significantly better than baselines for almost all message sizes and workloads. Homa can also sustain higher network loads.

Assumptions -> key design principles:
1. There is no time to schedule every packet.  -> transmitting short messages blindly;
2. Buffering is a necessary evil. & In-network priorities are a must.  -> using in-network priorities; i.e., short messages bypass queued packets for longer messages.
3. Making the best use of limited priorities requires receiver control. & Receivers must allocate priorities dynamically. -> allocating priorities dynamically at receivers in conjunction with receiver-driven rate control;
4. Receivers must overcommit their downlink in a controlled manner. -> controlled overcommitment of receiver downlinks.



==+== Scratchpad (for unsaved private notes)

==+== End Review
